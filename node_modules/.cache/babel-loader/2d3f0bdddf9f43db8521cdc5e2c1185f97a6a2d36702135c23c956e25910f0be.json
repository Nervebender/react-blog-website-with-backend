{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johan\\\\Documents\\\\my-blog\\\\src\\\\Blog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Post from './post';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // Fetch blog posts from your backend API\n    fetch('http://localhost:3001/posts').then(response => response.json()).then(data => setPosts(data)).catch(error => console.error('Error fetching blog posts:', error));\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${postId}`,\n          children: \"Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Blog, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","Post","Link","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","post","className","title","content","to","postId","_c","$RefreshReg$"],"sources":["C:/Users/Johan/Documents/my-blog/src/Blog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Post from './post';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Blog = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch blog posts from your backend API\r\n    fetch('http://localhost:3001/posts')\r\n      .then(response => response.json())\r\n      .then(data => setPosts(data))\r\n      .catch(error => console.error('Error fetching blog posts:', error));\r\n  }, []); // Empty dependency array ensures the effect runs only once on mount\r\n\r\n  return (\r\n    <div>\r\n      <h2>Latest Blog Posts</h2>\r\n      <ul id=\"posts\">\r\n        {posts.map(post => (\r\n           <div className=\"post\">\r\n           <h2>{title}</h2>\r\n           <p>{content}</p>\r\n           <Link to={`/posts/${postId}`}>Read More</Link>\r\n         </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BjB,OAAA;MAAIkB,EAAE,EAAC,OAAO;MAAAL,QAAA,EACXV,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACZpB,OAAA;QAAKqB,SAAS,EAAC,MAAM;QAAAR,QAAA,gBACrBb,OAAA;UAAAa,QAAA,EAAKS;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChBjB,OAAA;UAAAa,QAAA,EAAIU;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBjB,OAAA,CAACF,IAAI;UAAC0B,EAAE,EAAG,UAASC,MAAO,EAAE;UAAAZ,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CAzBID,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}